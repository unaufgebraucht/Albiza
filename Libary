-- Compkiller UI Library for Roblox - Black & White Theme
-- Complete working library

local Compkiller = {}

-- Services
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")
local HttpService = game:GetService("HttpService")

-- Variables
local Player = Players.LocalPlayer
local Mouse = Player:GetMouse()

-- Black & White Color Scheme
Compkiller.Colors = {
    Highlight = Color3.fromRGB(255, 255, 255),
    Toggle = Color3.fromRGB(200, 200, 200),
    Risky = Color3.fromRGB(255, 255, 255),
    BGDBColor = Color3.fromRGB(0, 0, 0),
    BlockColor = Color3.fromRGB(15, 15, 15),
    StrokeColor = Color3.fromRGB(60, 60, 60),
    SwitchColor = Color3.fromRGB(255, 255, 255),
    DropColor = Color3.fromRGB(35, 35, 35),
    MouseEnter = Color3.fromRGB(120, 120, 120),
    BlockBackground = Color3.fromRGB(25, 25, 25),
    LineColor = Color3.fromRGB(40, 40, 40),
    HighStrokeColor = Color3.fromRGB(80, 80, 80),
}

-- Utility Functions
local function CreateTween(object, properties, duration)
    duration = duration or 0.2
    local tween = TweenService:Create(object, TweenInfo.new(duration, Enum.EasingStyle.Quad), properties)
    tween:Play()
    return tween
end

local function CreateCorner(parent, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or 4)
    corner.Parent = parent
    return corner
end

local function CreateStroke(parent, color, thickness)
    local stroke = Instance.new("UIStroke")
    stroke.Color = color or Compkiller.Colors.StrokeColor
    stroke.Thickness = thickness or 1
    stroke.Parent = parent
    return stroke
end

-- Main Constructor
function Compkiller.new(options)
    local self = {}
    
    options = options or {}
    self.Name = options.Name or "Compkiller"
    self.Keybind = options.Keybind or "Insert"
    self.Logo = options.Logo or ""
    
    self.Tabs = {}
    self.CurrentTab = nil
    self.Visible = true
    
    -- Create Main GUI
    self.Gui = Instance.new("ScreenGui")
    self.Gui.Name = "Compkiller"
    self.Gui.Parent = CoreGui
    self.Gui.ResetOnSpawn = false
    
    -- Main Window
    self.Window = Instance.new("Frame")
    self.Window.Name = "Window"
    self.Window.Size = UDim2.new(0, 580, 0, 460)
    self.Window.Position = UDim2.new(0.5, -290, 0.5, -230)
    self.Window.BackgroundColor3 = Compkiller.Colors.BGDBColor
    self.Window.BorderSizePixel = 0
    self.Window.Active = true
    self.Window.Draggable = true
    self.Window.Parent = self.Gui
    
    CreateCorner(self.Window, 8)
    CreateStroke(self.Window, Compkiller.Colors.StrokeColor, 2)
    
    -- Title Bar
    self.TitleBar = Instance.new("Frame")
    self.TitleBar.Name = "TitleBar"
    self.TitleBar.Size = UDim2.new(1, 0, 0, 40)
    self.TitleBar.Position = UDim2.new(0, 0, 0, 0)
    self.TitleBar.BackgroundColor3 = Compkiller.Colors.BlockColor
    self.TitleBar.BorderSizePixel = 0
    self.TitleBar.Parent = self.Window
    
    CreateCorner(self.TitleBar, 8)
    
    -- Title Text
    self.Title = Instance.new("TextLabel")
    self.Title.Name = "Title"
    self.Title.Size = UDim2.new(1, -100, 1, 0)
    self.Title.Position = UDim2.new(0, 50, 0, 0)
    self.Title.BackgroundTransparency = 1
    self.Title.Text = self.Name
    self.Title.TextColor3 = Compkiller.Colors.SwitchColor
    self.Title.TextSize = 18
    self.Title.Font = Enum.Font.Gotham
    self.Title.TextXAlignment = Enum.TextXAlignment.Left
    self.Title.Parent = self.TitleBar
    
    -- Close Button
    self.CloseButton = Instance.new("TextButton")
    self.CloseButton.Name = "CloseButton"
    self.CloseButton.Size = UDim2.new(0, 30, 0, 30)
    self.CloseButton.Position = UDim2.new(1, -35, 0, 5)
    self.CloseButton.BackgroundColor3 = Compkiller.Colors.BlockBackground
    self.CloseButton.BorderSizePixel = 0
    self.CloseButton.Text = "Ã—"
    self.CloseButton.TextColor3 = Compkiller.Colors.SwitchColor
    self.CloseButton.TextSize = 20
    self.CloseButton.Font = Enum.Font.Gotham
    self.CloseButton.Parent = self.TitleBar
    
    CreateCorner(self.CloseButton, 4)
    
    self.CloseButton.MouseButton1Click:Connect(function()
        self.Visible = not self.Visible
        self.Gui.Enabled = self.Visible
    end)
    
    -- Tab Container
    self.TabContainer = Instance.new("Frame")
    self.TabContainer.Name = "TabContainer"
    self.TabContainer.Size = UDim2.new(1, 0, 0, 35)
    self.TabContainer.Position = UDim2.new(0, 0, 0, 45)
    self.TabContainer.BackgroundColor3 = Compkiller.Colors.BlockBackground
    self.TabContainer.BorderSizePixel = 0
    self.TabContainer.Parent = self.Window
    
    CreateCorner(self.TabContainer, 6)
    
    -- Tab Layout
    local tabLayout = Instance.new("UIListLayout")
    tabLayout.FillDirection = Enum.FillDirection.Horizontal
    tabLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
    tabLayout.VerticalAlignment = Enum.VerticalAlignment.Center
    tabLayout.Padding = UDim.new(0, 5)
    tabLayout.Parent = self.TabContainer
    
    local tabPadding = Instance.new("UIPadding")
    tabPadding.PaddingTop = UDim.new(0, 5)
    tabPadding.PaddingBottom = UDim.new(0, 5)
    tabPadding.PaddingLeft = UDim.new(0, 5)
    tabPadding.PaddingRight = UDim.new(0, 5)
    tabPadding.Parent = self.TabContainer
    
    -- Content Container
    self.ContentContainer = Instance.new("Frame")
    self.ContentContainer.Name = "ContentContainer"
    self.ContentContainer.Size = UDim2.new(1, 0, 1, -85)
    self.ContentContainer.Position = UDim2.new(0, 0, 0, 85)
    self.ContentContainer.BackgroundTransparency = 1
    self.ContentContainer.BorderSizePixel = 0
    self.ContentContainer.Parent = self.Window
    
    -- Keybind Setup
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        if input.KeyCode == Enum.KeyCode[self.Keybind] then
            self.Visible = not self.Visible
            self.Gui.Enabled = self.Visible
        end
    end)
    
    -- Tab Functions
    function self:DrawTab(options)
        options = options or {}
        local name = options.Name or "Tab"
        
        local tab = {
            Name = name,
            Sections = {},
            Visible = false,
            Window = self
        }
        
        -- Tab Button
        tab.Button = Instance.new("TextButton")
        tab.Button.Name = name .. "Tab"
        tab.Button.Size = UDim2.new(0, 100, 1, -10)
        tab.Button.BackgroundColor3 = Compkiller.Colors.BlockColor
        tab.Button.BorderSizePixel = 0
        tab.Button.Text = name
        tab.Button.TextColor3 = Compkiller.Colors.SwitchColor
        tab.Button.TextSize = 14
        tab.Button.Font = Enum.Font.Gotham
        tab.Button.Parent = self.TabContainer
        
        CreateCorner(tab.Button, 4)
        CreateStroke(tab.Button, Compkiller.Colors.StrokeColor)
        
        -- Tab Content
        tab.Content = Instance.new("Frame")
        tab.Content.Name = name .. "Content"
        tab.Content.Size = UDim2.new(1, 0, 1, 0)
        tab.Content.Position = UDim2.new(0, 0, 0, 0)
        tab.Content.BackgroundTransparency = 1
        tab.Content.BorderSizePixel = 0
        tab.Content.Visible = false
        tab.Content.Parent = self.ContentContainer
        
        -- Left and Right Sections
        tab.LeftSection = Instance.new("Frame")
        tab.LeftSection.Name = "LeftSection"
        tab.LeftSection.Size = UDim2.new(0.5, -5, 1, 0)
        tab.LeftSection.Position = UDim2.new(0, 0, 0, 0)
        tab.LeftSection.BackgroundTransparency = 1
        tab.LeftSection.Parent = tab.Content
        
        tab.RightSection = Instance.new("Frame")
        tab.RightSection.Name = "RightSection"
        tab.RightSection.Size = UDim2.new(0.5, -5, 1, 0)
        tab.RightSection.Position = UDim2.new(0.5, 5, 0, 0)
        tab.RightSection.BackgroundTransparency = 1
        tab.RightSection.Parent = tab.Content
        
        -- Section Layouts
        local leftLayout = Instance.new("UIListLayout")
        leftLayout.FillDirection = Enum.FillDirection.Vertical
        leftLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
        leftLayout.VerticalAlignment = Enum.VerticalAlignment.Top
        leftLayout.Padding = UDim.new(0, 10)
        leftLayout.Parent = tab.LeftSection
        
        local rightLayout = Instance.new("UIListLayout")
        rightLayout.FillDirection = Enum.FillDirection.Vertical
        rightLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
        rightLayout.VerticalAlignment = Enum.VerticalAlignment.Top
        rightLayout.Padding = UDim.new(0, 10)
        rightLayout.Parent = tab.RightSection
        
        local leftPadding = Instance.new("UIPadding")
        leftPadding.PaddingTop = UDim.new(0, 10)
        leftPadding.PaddingBottom = UDim.new(0, 10)
        leftPadding.PaddingLeft = UDim.new(0, 10)
        leftPadding.PaddingRight = UDim.new(0, 10)
        leftPadding.Parent = tab.LeftSection
        
        local rightPadding = Instance.new("UIPadding")
        rightPadding.PaddingTop = UDim.new(0, 10)
        rightPadding.PaddingBottom = UDim.new(0, 10)
        rightPadding.PaddingLeft = UDim.new(0, 10)
        rightPadding.PaddingRight = UDim.new(0, 10)
        rightPadding.Parent = tab.RightSection
        
        -- Tab Button Events
        tab.Button.MouseButton1Click:Connect(function()
            self:SelectTab(tab)
        end)
        
        tab.Button.MouseEnter:Connect(function()
            CreateTween(tab.Button, {BackgroundColor3 = Compkiller.Colors.MouseEnter})
        end)
        
        tab.Button.MouseLeave:Connect(function()
            if tab ~= self.CurrentTab then
                CreateTween(tab.Button, {BackgroundColor3 = Compkiller.Colors.BlockColor})
            end
        end)
        
        -- Section Function
        function tab:DrawSection(options)
            options = options or {}
            local sectionName = options.Name or "Section"
            local position = options.Position or "left"
            
            local section = {
                Name = sectionName,
                Tab = self,
                Elements = {}
            }
            
            -- Section Frame
            section.Frame = Instance.new("Frame")
            section.Frame.Name = sectionName .. "Section"
            section.Frame.Size = UDim2.new(1, 0, 0, 200)
            section.Frame.BackgroundColor3 = Compkiller.Colors.BlockColor
            section.Frame.BorderSizePixel = 0
            section.Frame.Parent = position == "left" and self.LeftSection or self.RightSection
            
            CreateCorner(section.Frame, 6)
            CreateStroke(section.Frame, Compkiller.Colors.StrokeColor)
            
            -- Section Title
            section.Title = Instance.new("TextLabel")
            section.Title.Name = "Title"
            section.Title.Size = UDim2.new(1, -20, 0, 30)
            section.Title.Position = UDim2.new(0, 10, 0, 5)
            section.Title.BackgroundTransparency = 1
            section.Title.Text = sectionName
            section.Title.TextColor3 = Compkiller.Colors.SwitchColor
            section.Title.TextSize = 16
            section.Title.Font = Enum.Font.Gotham
            section.Title.TextXAlignment = Enum.TextXAlignment.Left
            section.Title.Parent = section.Frame
            
            -- Section Content
            section.Content = Instance.new("Frame")
            section.Content.Name = "Content"
            section.Content.Size = UDim2.new(1, -20, 1, -40)
            section.Content.Position = UDim2.new(0, 10, 0, 35)
            section.Content.BackgroundTransparency = 1
            section.Content.Parent = section.Frame
            
            -- Content Layout
            section.Layout = Instance.new("UIListLayout")
            section.Layout.FillDirection = Enum.FillDirection.Vertical
            section.Layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
            section.Layout.VerticalAlignment = Enum.VerticalAlignment.Top
            section.Layout.Padding = UDim.new(0, 8)
            section.Layout.Parent = section.Content
            
            -- Auto-resize section
            section.Layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
                section.Frame.Size = UDim2.new(1, 0, 0, section.Layout.AbsoluteContentSize.Y + 50)
            end)
            
            -- Toggle Function
            function section:AddToggle(options)
                options = options or {}
                local name = options.Name or "Toggle"
                local default = options.Default or false
                local callback = options.Callback or function() end
                
                local toggle = {
                    Name = name,
                    Value = default,
                    Callback = callback
                }
                
                -- Toggle Frame
                toggle.Frame = Instance.new("Frame")
                toggle.Frame.Name = name .. "Toggle"
                toggle.Frame.Size = UDim2.new(1, 0, 0, 35)
                toggle.Frame.BackgroundColor3 = Compkiller.Colors.BlockBackground
                toggle.Frame.BorderSizePixel = 0
                toggle.Frame.Parent = self.Content
                
                CreateCorner(toggle.Frame, 4)
                CreateStroke(toggle.Frame, Compkiller.Colors.StrokeColor)
                
                -- Toggle Label
                toggle.Label = Instance.new("TextLabel")
                toggle.Label.Name = "Label"
                toggle.Label.Size = UDim2.new(1, -45, 1, 0)
                toggle.Label.Position = UDim2.new(0, 10, 0, 0)
                toggle.Label.BackgroundTransparency = 1
                toggle.Label.Text = name
                toggle.Label.TextColor3 = Compkiller.Colors.SwitchColor
                toggle.Label.TextSize = 14
                toggle.Label.Font = Enum.Font.Gotham
                toggle.Label.TextXAlignment = Enum.TextXAlignment.Left
                toggle.Label.Parent = toggle.Frame
                
                -- Toggle Button
                toggle.Button = Instance.new("TextButton")
                toggle.Button.Name = "Button"
                toggle.Button.Size = UDim2.new(0, 25, 0, 25)
                toggle.Button.Position = UDim2.new(1, -30, 0.5, -12.5)
                toggle.Button.BackgroundColor3 = default and Compkiller.Colors.Toggle or Compkiller.Colors.BlockColor
                toggle.Button.BorderSizePixel = 0
                toggle.Button.Text = ""
                toggle.Button.Parent = toggle.Frame
                
                CreateCorner(toggle.Button, 4)
                CreateStroke(toggle.Button, Compkiller.Colors.StrokeColor)
                
                -- Toggle Events
                toggle.Button.MouseButton1Click:Connect(function()
                    toggle.Value = not toggle.Value
                    CreateTween(toggle.Button, {
                        BackgroundColor3 = toggle.Value and Compkiller.Colors.Toggle or Compkiller.Colors.BlockColor
                    })
                    callback(toggle.Value)
                end)
                
                toggle.Button.MouseEnter:Connect(function()
                    CreateTween(toggle.Frame, {BackgroundColor3 = Compkiller.Colors.MouseEnter})
                end)
                
                toggle.Button.MouseLeave:Connect(function()
                    CreateTween(toggle.Frame, {BackgroundColor3 = Compkiller.Colors.BlockBackground})
                end)
                
                table.insert(self.Elements, toggle)
                return toggle
            end
            
            -- Button Function
            function section:AddButton(options)
                options = options or {}
                local name = options.Name or "Button"
                local callback = options.Callback or function() end
                local risky = options.Risky or false
                
                local button = {
                    Name = name,
                    Callback = callback,
                    Risky = risky
                }
                
                -- Button Frame
                button.Frame = Instance.new("TextButton")
                button.Frame.Name = name .. "Button"
                button.Frame.Size = UDim2.new(1, 0, 0, 35)
                button.Frame.BackgroundColor3 = risky and Compkiller.Colors.Risky or Compkiller.Colors.Highlight
                button.Frame.BorderSizePixel = 0
                button.Frame.Text = name
                button.Frame.TextColor3 = Color3.fromRGB(0, 0, 0)
                button.Frame.TextSize = 14
                button.Frame.Font = Enum.Font.Gotham
                button.Frame.Parent = self.Content
                
                CreateCorner(button.Frame, 4)
                CreateStroke(button.Frame, Compkiller.Colors.StrokeColor)
                
                -- Button Events
                button.Frame.MouseButton1Click:Connect(function()
                    callback()
                end)
                
                button.Frame.MouseEnter:Connect(function()
                    CreateTween(button.Frame, {BackgroundColor3 = Color3.fromRGB(200, 200, 200)})
                end)
                
                button.Frame.MouseLeave:Connect(function()
                    CreateTween(button.Frame, {
                        BackgroundColor3 = risky and Compkiller.Colors.Risky or Compkiller.Colors.Highlight
                    })
                end)
                
                table.insert(self.Elements, button)
                return button
            end
            
            -- Slider Function
            function section:AddSlider(options)
                options = options or {}
                local name = options.Name or "Slider"
                local min = options.Min or 0
                local max = options.Max or 100
                local default = options.Default or min
                local callback = options.Callback or function() end
                
                local slider = {
                    Name = name,
                    Min = min,
                    Max = max,
                    Value = default,
                    Callback = callback
                }
                
                -- Slider Frame
                slider.Frame = Instance.new("Frame")
                slider.Frame.Name = name .. "Slider"
                slider.Frame.Size = UDim2.new(1, 0, 0, 50)
                slider.Frame.BackgroundColor3 = Compkiller.Colors.BlockBackground
                slider.Frame.BorderSizePixel = 0
                slider.Frame.Parent = self.Content
                
                CreateCorner(slider.Frame, 4)
                CreateStroke(slider.Frame, Compkiller.Colors.StrokeColor)
                
                -- Slider Label
                slider.Label = Instance.new("TextLabel")
                slider.Label.Name = "Label"
                slider.Label.Size = UDim2.new(0.7, 0, 0, 20)
                slider.Label.Position = UDim2.new(0, 10, 0, 5)
                slider.Label.BackgroundTransparency = 1
                slider.Label.Text = name
                slider.Label.TextColor3 = Compkiller.Colors.SwitchColor
                slider.Label.TextSize = 14
                slider.Label.Font = Enum.Font.Gotham
                slider.Label.TextXAlignment = Enum.TextXAlignment.Left
                slider.Label.Parent = slider.Frame
                
                -- Value Label
                slider.ValueLabel = Instance.new("TextLabel")
                slider.ValueLabel.Name = "ValueLabel"
                slider.ValueLabel.Size = UDim2.new(0.3, -10, 0, 20)
                slider.ValueLabel.Position = UDim2.new(0.7, 0, 0, 5)
                slider.ValueLabel.BackgroundTransparency = 1
                slider.ValueLabel.Text = tostring(default)
                slider.ValueLabel.TextColor3 = Compkiller.Colors.SwitchColor
                slider.ValueLabel.TextSize = 14
                slider.ValueLabel.Font = Enum.Font.Gotham
                slider.ValueLabel.TextXAlignment = Enum.TextXAlignment.Right
                slider.ValueLabel.Parent = slider.Frame
                
                -- Slider Track
                slider.Track = Instance.new("Frame")
                slider.Track.Name = "Track"
                slider.Track.Size = UDim2.new(1, -20, 0, 4)
                slider.Track.Position = UDim2.new(0, 10, 1, -15)
                slider.Track.BackgroundColor3 = Compkiller.Colors.BlockColor
                slider.Track.BorderSizePixel = 0
                slider.Track.Parent = slider.Frame
                
                CreateCorner(slider.Track, 2)
                
                -- Slider Fill
                slider.Fill = Instance.new("Frame")
                slider.Fill.Name = "Fill"
                slider.Fill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
                slider.Fill.Position = UDim2.new(0, 0, 0, 0)
                slider.Fill.BackgroundColor3 = Compkiller.Colors.Highlight
                slider.Fill.BorderSizePixel = 0
                slider.Fill.Parent = slider.Track
                
                CreateCorner(slider.Fill, 2)
                
                -- Slider Knob
                slider.Knob = Instance.new("Frame")
                slider.Knob.Name = "Knob"
                slider.Knob.Size = UDim2.new(0, 12, 0, 12)
                slider.Knob.Position = UDim2.new((default - min) / (max - min), -6, 0.5, -6)
                slider.Knob.BackgroundColor3 = Compkiller.Colors.SwitchColor
                slider.Knob.BorderSizePixel = 0
                slider.Knob.Parent = slider.Track
                
                CreateCorner(slider.Knob, 6)
                
                -- Slider Functionality
                local dragging = false
                
                slider.Track.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = true
                    end
                end)
                
                UserInputService.InputEnded:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = false
                    end
                end)
                
                UserInputService.InputChanged:Connect(function(input)
                    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                        local trackPosition = slider.Track.AbsolutePosition.X
                        local trackSize = slider.Track.AbsoluteSize.X
                        local mouseX = input.Position.X
                        
                        local percentage = math.clamp((mouseX - trackPosition) / trackSize, 0, 1)
                        local value = math.floor(min + (max - min) * percentage)
                        
                        slider.Value = value
                        slider.ValueLabel.Text = tostring(value)
                        
                        CreateTween(slider.Fill, {Size = UDim2.new(percentage, 0, 1, 0)})
                        CreateTween(slider.Knob, {Position = UDim2.new(percentage, -6, 0.5, -6)})
                        
                        callback(value)
                    end
                end)
                
                table.insert(self.Elements, slider)
                return slider
            end
            
            table.insert(self.Sections, section)
            return section
        end
        
        -- Add tab to window
        table.insert(self.Tabs, tab)
        
        -- Select first tab by default
        if #self.Tabs == 1 then
            self:SelectTab(tab)
        end
        
        return tab
    end
    
    function self:SelectTab(tab)
        -- Hide current tab
        if self.CurrentTab then
            self.CurrentTab.Content.Visible = false
            CreateTween(self.CurrentTab.Button, {BackgroundColor3 = Compkiller.Colors.BlockColor})
        end
        
        -- Show new tab
        self.CurrentTab = tab
        tab.Content.Visible = true
        CreateTween(tab.Button, {BackgroundColor3 = Compkiller.Colors.Highlight})
    end
    
    return self
end

return Compkiller
